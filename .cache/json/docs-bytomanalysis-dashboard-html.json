{"data":{"markdownRemark":{"html":"<p>在前面的几篇文章中，我们一直在研究如何与一个比原节点建立连接，并且从它那里请求区块数据。然而我很快就遇到了瓶颈。</p>\n<p>因为当我处理拿到的区块数据时，发现我已经触及到了比原链的核心，即区块链的数据结构以及分叉的处理。如果不能完全理解这一块，就没有办法正确的处理区块数据。然而它涉及的内容太多了，在短时间之内把它理解透彻是一件非常困难的事情。</p>\n<p>之前我的做法就好像我想了解一个城市，于是沿着一条路从外围向市中心进发。前面一直很顺利，但等到了市中心时，发现这里人多路杂，有点迷失了。在这种情况下，我觉得我应该暂停研究核心，而是从另外一条路开始，由外向内再来一遍。因为在行进的过程中，我可以慢慢的积累更多的知识，让自己处于学习区而非恐慌区。这条路的终点也将是触及到核心，但是不深入进去。这样的话，等我多走了几条路之后，积累的知识够了，再研究核心就不会觉得迷茫了。</p>\n<p>所以本文本来是想去研究一下，当别的节点把区块数据发给我们之后，我们应该怎么处理，现在换成研究比原的Dashboard是怎么做出来的。为什么选择这个呢？因为它非常以一种非常直观的方式，展示了比原向我们提供的各种信息和功能。在本文中，我们并不过多的讲解它上面的功能，而是把关注点放在比原到底是如何在代码层面上实现了这样的一个Dashboard。它上面的功能，将会在以后慢慢研究。</p>\n<p>我们今天的问题是“比原的Dashboard是怎么做出来的”，但是这个问题有点大，并且不够具体，所以我们还是跟以前一样，先来把它细分一下：</p>\n<ol>\n<li>我们怎样在比原中启用Dashboard功能？</li>\n<li>Dashboard中提供了哪些信息和功能？</li>\n<li>比原是如何实现了http服务器？</li>\n<li>Dashboard使用了什么样的前端框架？</li>\n<li>Dashboard上面的数据，是以什么样的方式从后台拿到的？</li>\n</ol>\n<p>我们下面开始一一探讨。</p>\n<h2 id=\"我们怎样在比原中启用dashboard功能？\"><a href=\"#%E6%88%91%E4%BB%AC%E6%80%8E%E6%A0%B7%E5%9C%A8%E6%AF%94%E5%8E%9F%E4%B8%AD%E5%90%AF%E7%94%A8dashboard%E5%8A%9F%E8%83%BD%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>我们怎样在比原中启用Dashboard功能？</h2>\n<p>当我们使用<code class=\"gatsby-code-text\">bytomd node</code>启动比原节点的时候，不需要任何配置，它就会自动启用Dashboard功能，并且会在浏览器中打开页面，非常方便。</p>\n<p>如果是第一次运行，还没有创建过帐户，它会提示我们创建一个帐户及相关的私钥：</p>\n<p><img src=\"./images/init-account.png\" alt=\"init-account\"></p>\n<p>我们可以通过填写帐户别名、密钥别名和相应的密码来创建，或者点击下面的”Restore wallet”来恢复之前的帐号（如果之前备份过的话）：</p>\n<p><img src=\"./images/init-account-filled.png\" alt=\"init-account-filled\"></p>\n<p>点击”Register”后，就会创建成功，并进入管理页面：</p>\n<p><img src=\"./images/dashboard1.png\" alt=\"dashboard1\"></p>\n<p>注意它的地址是：<a href=\"http://127.0.0.1:9888/dashboard\">http://127.0.0.1:9888/dashboard</a></p>\n<p>如果我们查看配置文件<code class=\"gatsby-code-text\">config.toml</code>，可以在其中看到它的身影：</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-ini\"><code class=\"gatsby-code-ini\"><span class=\"token constant\">fast_sync</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> true</span>\n<span class=\"token constant\">db_backend</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> \"leveldb\"</span>\n<span class=\"token constant\">api_addr</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> \"0.0.0.0:9888\"</span>\n<span class=\"token constant\">chain_id</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> \"solonet\"</span>\n<span class=\"token selector\">[p2p]</span>\n<span class=\"token constant\">laddr</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> \"tcp://0.0.0.0:46658\"</span>\n<span class=\"token constant\">seeds</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> \"\"</span></code></pre>\n      </div>\n<p>注意其中的<code class=\"gatsby-code-text\">api_addr</code>，就是dashboard以及web-api的地址。比原在启动之后，其<code class=\"gatsby-code-text\">BaseConfig.ApiAddress</code>会从配置文件中取到相应的值：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/config/config.go#L41-L85\">config/config.go#L41-L85</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">type</span> BaseConfig <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    ApiAddress <span class=\"token builtin\">string</span> <span class=\"token string\">`mapstructure:\"api_addr\"`</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>然后在启动时，比原的web api以及dashboard会使用该地址，并且在浏览器中打开dashboard。</p>\n<p>然而此处有一个奇怪的问题，就是不论这里的值是什么，浏览器总是打开<code class=\"gatsby-code-text\">http://localhost:9888</code>这个地址。为什么呢？因为它写死在了代码中。</p>\n<p>在代码中，<code class=\"gatsby-code-text\">http://localhost:9888</code>一共出现在了三个地方，一个是用来表示dashboard的访问地址，位于<code class=\"gatsby-code-text\">node/node.go</code>中：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/node/node.go#L33-L37\">node/node.go#L33-L37</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n\twebAddress               <span class=\"token operator\">=</span> <span class=\"token string\">\"http://127.0.0.1:9888\"</span>\n\texpireReservationsPeriod <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>Second\n\tmaxNewBlockChSize        <span class=\"token operator\">=</span> <span class=\"token number\">1024</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>这里的<code class=\"gatsby-code-text\">webAddress</code>，只在从代码中打开浏览器显示dashboard时使用：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/node/node.go#L153-L159\">node/node.go#L153-L159</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">lanchWebBroser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Launching System Browser with :\"</span><span class=\"token punctuation\">,</span> webAddress<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>webAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>比原通过<code class=\"gatsby-code-text\">&quot;github.com/toqueteos/webbrowser&quot;</code>这个第三方的库，可以在节点启动的时候，调用系统默认的浏览器，并打开指定的网址，方便了用户。（注意这段代码中有不少错别字，比如<code class=\"gatsby-code-text\">lanch</code>、<code class=\"gatsby-code-text\">broser</code>，已在后续版本中修正了）</p>\n<p>另一个地方，是用于<code class=\"gatsby-code-text\">bytomcli</code>这个命令行工具的，只是奇怪的是它放在了<code class=\"gatsby-code-text\">util/util.go</code>下面：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/util/util.go#L26-L28\">util/util.go#L26-L28</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n\tcoreURL <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BYTOM_URL\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://localhost:9888\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>为什么说它是属于<code class=\"gatsby-code-text\">bytomcli</code>的呢？因为这个<code class=\"gatsby-code-text\">coreURL</code>最终被用在<code class=\"gatsby-code-text\">util</code>包下的一个<code class=\"gatsby-code-text\">ClientCall(...)</code>函数中，用于从代码中向指定的web api发送请求，并使用其回复信息。但是这个方法在<code class=\"gatsby-code-text\">bytomcli</code>所在的包使用。如果是这样的话，<code class=\"gatsby-code-text\">coreURL</code>及相关的函数，应该移到<code class=\"gatsby-code-text\">bytomcli</code>包里才对。</p>\n<p>第三个地方，跟第二个非常像，但是位于<code class=\"gatsby-code-text\">tools/sendbulktx/core/util.go</code>中，它是用于另一个命令行工具<code class=\"gatsby-code-text\">sendbulktx</code>的：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/tools/sendbulktx/core/util.go#L26-L28\">tools/sendbulktx/core/util.go#L26-L28</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n\tcoreURL <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BYTOM_URL\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://localhost:9888\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>一模一样，对吧。其实不光是这里，还有一堆相关的方法和函数，也是一模一样的，一看就是跟第二处互相复制过来的。</p>\n<p>关于这里的问题，我提了两个issue：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/Bytom/bytom/issues/908\">dashboard和web api的地址写在配置文件config.toml中，但是同时写死在代码中</a>：这里在实现上的确是有一定难度的，原因是在配置文件中，写的是<code class=\"gatsby-code-text\">0.0.0.0:9998</code>，但是从浏览器或者命令行工具中去访问时，需要使用一个具体的ip（而不是<code class=\"gatsby-code-text\">0.0.0.0</code>），否则某些功能会不正常。另外，在后面的代码分析处会看到，除了配置文件中的这个地址，比原还会优先从环境变量中取得<code class=\"gatsby-code-text\">LISTEN</code>所对应的地址web api的地址。所以这里需要更多的研究才能正确修复。</p>\n</li>\n<li>\n<p><a href=\"https://github.com/Bytom/bytom/issues/909\">与读取webapi相关的代码出现大量重复</a>：官方解释说<code class=\"gatsby-code-text\">sendbulktx</code>这个工具在未来将从bytom项目中独立出去，所以代码是重复的，如果是这样的话，可以接受。</p>\n</li>\n</ul>\n<h2 id=\"dashboard中提供了哪些信息和功能？\"><a href=\"#dashboard%E4%B8%AD%E6%8F%90%E4%BE%9B%E4%BA%86%E5%93%AA%E4%BA%9B%E4%BF%A1%E6%81%AF%E5%92%8C%E5%8A%9F%E8%83%BD%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dashboard中提供了哪些信息和功能？</h2>\n<p>下面我们快速过一遍比原的Dashboard提供了哪些信息和功能。由于在本文中，我们关注的重点不是这些具体的功能，所以会不会细究。另外，前面刚创建好的帐号里，很多数据都是没有的，为了展示方便，我事先做了一些数据。</p>\n<p>首先是密钥：</p>\n<p><img src=\"./images/dashboard-keys.png\" alt=\"dashboard-keys\"></p>\n<p>这里显示了当前有几个密钥，其别名是什么，并且显示出来了主公钥。我们可以点击右上角的“新建”按钮创建多个密钥，但是这里不再展示。</p>\n<p>帐户：</p>\n<p><img src=\"./images/dashboard-account.png\" alt=\"dashboard-account\"></p>\n<p>资产：</p>\n<p><img src=\"./images/dashboard-asset.png\" alt=\"dashboard-asset\"></p>\n<p>默认只定义了<code class=\"gatsby-code-text\">BTM</code>这一种资产，可以通过“新建”按钮增加多种资产。</p>\n<p>余额：</p>\n<p><img src=\"./images/dashboard-balances.png\" alt=\"dashboard-balances\"></p>\n<p>看起来我还是相当有钱的（可惜不能用）。</p>\n<p>交易：</p>\n<p><img src=\"./images/dashboard-transactions.png\" alt=\"dashboard-transactions\"></p>\n<p>展示了多笔交易，实际上是在本机挖矿挖出来的。由于挖矿出来的BTM是由系统直接转到我们的帐户上的，所以也可以看作是一种交易。</p>\n<p>创建交易：</p>\n<p><img src=\"./images/dashboard-create-transaction.png\" alt=\"dashboard-create-transaction\"></p>\n<p>我们也可以像这样自己创建交易，把我们持有的某种资产（比如BTM）转到另一个地址。</p>\n<p>未花费输出：</p>\n<p><img src=\"./images/dashboard-unspent.png\" alt=\"dashboard-unspent\"></p>\n<p>简单的理解就是与我相关的每一笔交易都被记录下来，有输入和输出部分，其中的输出可能又是另一个交易的输入。这里显示的是还没有花费掉的输出（可以根据它来计算我当前到底还剩下多少余额）</p>\n<p>查看核心状态：</p>\n<p><img src=\"./images/dashboard-core-status.png\" alt=\"dashboard-core-status\"></p>\n<p>定义访问控制：</p>\n<p><img src=\"./images/dashboard-token.png\" alt=\"dashboard-token\"></p>\n<p>备份和还原操作：</p>\n<p><img src=\"./images/dashboard-backup.png\" alt=\"dashboard-backup\"></p>\n<p>另外每个页面左侧栏的下面，还有关于连接的链的类型（此处为<code class=\"gatsby-code-text\">solonet</code>），以及同步情况和与当前节点连接的其它节点数。</p>\n<p>这里展示的信息和功能我们还不需要细究，但是这里出现的名词却是要留意的，因为它们都是比原的核心概念。等我们以后研究比原内部区块链核心功能的时候，实际上都是围绕着它们来的。这里的每一个概念，可能都需要一到多篇文章专门讨论。</p>\n<p>我们在今天关注的是技术实现层面，下面我们要开始进入代码时间了。</p>\n<h2 id=\"比原是如何实现了http服务器？\"><a href=\"#%E6%AF%94%E5%8E%9F%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%BA%86http%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>比原是如何实现了http服务器？</h2>\n<p>首先让我们从比原节点启动开始，一直找到启动http服务的地方：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/cmd/bytomd/main.go#L54-L57\">cmd/bytomd/main.go#L54-L57</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcmd <span class=\"token operator\">:=</span> cli<span class=\"token punctuation\">.</span><span class=\"token function\">PrepareBaseCmd</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">.</span>RootCmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TM\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">ExpandEnv</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultDataDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tcmd<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/cmd/bytomd/commands/run_node.go#L41-L54\">cmd/bytomd/commands/run_node.go#L41-L54</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">runNode</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Create &amp; start node</span>\n\tn <span class=\"token operator\">:=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">NewNode</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/node/node.go#L169-L180\">node/node.go#L169-L180</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span>Node<span class=\"token punctuation\">)</span> <span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// ...</span>\n\tn<span class=\"token punctuation\">.</span><span class=\"token function\">initAndstartApiServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>很快找到了，<code class=\"gatsby-code-text\">initAndstartApiServer</code>：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/node/node.go#L161-L167\">node/node.go#L161-L167</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span>Node<span class=\"token punctuation\">)</span> <span class=\"token function\">initAndstartApiServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1.</span>\n\tn<span class=\"token punctuation\">.</span>api <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">NewAPI</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>syncManager<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>wallet<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>txfeed<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>cpuMiner<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>miningPool<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>accessTokens<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 2. </span>\n\tlistenAddr <span class=\"token operator\">:=</span> env<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LISTEN\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>ApiAddress<span class=\"token punctuation\">)</span>\n    env<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">// 3.</span>\n\tn<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">StartServer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>listenAddr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>可以看到，该方法分成了三部分：</p>\n<ol>\n<li>通过传入大量的参数，来构造一个<code class=\"gatsby-code-text\">API</code>对象。进去后会看到大量的与url相关的配置。</li>\n<li>先从环境中取得<code class=\"gatsby-code-text\">LISTEN</code>对应的值，如果没有的话，再使用<code class=\"gatsby-code-text\">config.toml</code>中指定的<code class=\"gatsby-code-text\">api_addr</code>值，作为api服务的入口地址</li>\n<li>真正启动服务</li>\n</ol>\n<p>由于2比较简单，所以我们下面将仔细分析1和3.</p>\n<p>先找到1处所对应的<code class=\"gatsby-code-text\">api.NewAPI</code>方法：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L143-L157\">api/api.go#L143-L157</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">NewAPI</span><span class=\"token punctuation\">(</span>sync <span class=\"token operator\">*</span>netsync<span class=\"token punctuation\">.</span>SyncManager<span class=\"token punctuation\">,</span> wallet <span class=\"token operator\">*</span>wallet<span class=\"token punctuation\">.</span>Wallet<span class=\"token punctuation\">,</span> txfeeds <span class=\"token operator\">*</span>txfeed<span class=\"token punctuation\">.</span>Tracker<span class=\"token punctuation\">,</span> cpuMiner <span class=\"token operator\">*</span>cpuminer<span class=\"token punctuation\">.</span>CPUMiner<span class=\"token punctuation\">,</span> miningPool <span class=\"token operator\">*</span>miningpool<span class=\"token punctuation\">.</span>MiningPool<span class=\"token punctuation\">,</span> chain <span class=\"token operator\">*</span>protocol<span class=\"token punctuation\">.</span>Chain<span class=\"token punctuation\">,</span> config <span class=\"token operator\">*</span>cfg<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">,</span> token <span class=\"token operator\">*</span>accesstoken<span class=\"token punctuation\">.</span>CredentialStore<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>API <span class=\"token punctuation\">{</span>\n\tapi <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>API<span class=\"token punctuation\">{</span>\n\t\tsync<span class=\"token punctuation\">:</span>          sync<span class=\"token punctuation\">,</span>\n\t\twallet<span class=\"token punctuation\">:</span>        wallet<span class=\"token punctuation\">,</span>\n\t\tchain<span class=\"token punctuation\">:</span>         chain<span class=\"token punctuation\">,</span>\n\t\taccessTokens<span class=\"token punctuation\">:</span>  token<span class=\"token punctuation\">,</span>\n\t\ttxFeedTracker<span class=\"token punctuation\">:</span> txfeeds<span class=\"token punctuation\">,</span>\n\t\tcpuMiner<span class=\"token punctuation\">:</span>      cpuMiner<span class=\"token punctuation\">,</span>\n\t\tminingPool<span class=\"token punctuation\">:</span>    miningPool<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\tapi<span class=\"token punctuation\">.</span><span class=\"token function\">buildHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tapi<span class=\"token punctuation\">.</span><span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">return</span> api\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>它主要就是把传进来的各参数拿住，供后面使用。然后就是<code class=\"gatsby-code-text\">api.buildHandler</code>来配置各个功能点的路径和处理函数，以及用<code class=\"gatsby-code-text\">api.initServer</code>来初始化服务。</p>\n<p>进入<code class=\"gatsby-code-text\">api.buildHandler()</code>。这个方法有点长，把它分成几部分来讲解：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L164-L244\">api/api.go#L164-L244</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">buildHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    walletEnable <span class=\"token operator\">:=</span> <span class=\"token boolean\">false</span>\n    m <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">NewServeMux</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>看来http服务使用的是Go自带的<code class=\"gatsby-code-text\">http</code>包。</p>\n<p>向下是，当用户的钱包功能没有禁用的话，就会配置与钱包相关的各功能点（比如帐号、交易、密钥等）：</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\">\t<span class=\"token keyword\">if</span> a<span class=\"token punctuation\">.</span>wallet <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\twalletEnable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-account\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createAccount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-accounts\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listAccounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete-account\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>deleteAccount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-account-receiver\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createAccountReceiver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-addresses\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listAddresses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/validate-address\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>validateAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-asset\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createAsset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/update-asset-alias\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>updateAssetAlias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-asset\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getAsset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-assets\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listAssets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-key\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>pseudohsmCreateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-keys\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>pseudohsmListKeys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete-key\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>pseudohsmDeleteKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/reset-key-password\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>pseudohsmResetPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/build-transaction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sign-transaction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>pseudohsmSignTemplates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/submit-transaction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/estimate-transaction-gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>estimateTxGas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-transaction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getTransaction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-transactions\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listTransactions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-balances\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listBalances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-unspent-outputs\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listUnspentOutputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/backup-wallet\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>backupWalletImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/restore-wallet\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>restoreWalletImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enable wallet\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>钱包功能默认是启用的，用户如何才能禁用它呢？方法是在配置文件<code class=\"gatsby-code-text\">config.toml</code>中，加上这一节代码：</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-ini\"><code class=\"gatsby-code-ini\"><span class=\"token selector\">[wallet]</span>\n<span class=\"token constant\">disable</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> true</span></code></pre>\n      </div>\n<p>在前面的代码中，在配置功能点时，使用了大量的<code class=\"gatsby-code-text\">m.Handle(&quot;/create-account&quot;, jsonHandler(a.createAccount))</code>这样的代码，它是什么意思呢？</p>\n<ol>\n<li><code class=\"gatsby-code-text\">/create-account</code>：该功能的路径，比如对于这个，用户需要在浏览器或者命令行中，使用地址<code class=\"gatsby-code-text\">http://localhost:9888/create-account</code>来访问</li>\n<li><code class=\"gatsby-code-text\">a.createAccount</code>：用于处理用户的访问，比如拿到用户提供的数据，处理完后再返回某个数据给用户，会在下面详解</li>\n<li><code class=\"gatsby-code-text\">jsonHandler</code>：是一个中间层，把用户发送的JSON数据转成第2步handler需要的Go类型参数，或者把2返回的Go数据转成JSON给用户</li>\n<li><code class=\"gatsby-code-text\">m.Handle(path, handler)</code>：用来把功能点路径和相应的处理函数对应起来</li>\n</ol>\n<p>这里先看第3步中的<code class=\"gatsby-code-text\">jsonHandler</code>的代码：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L259-L265\">api/api.go#L259-L265</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>f <span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> http<span class=\"token punctuation\">.</span>Handler <span class=\"token punctuation\">{</span>\n\th<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> httpjson<span class=\"token punctuation\">.</span><span class=\"token function\">Handler</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> errorFormatter<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> h\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>它里面用到了<code class=\"gatsby-code-text\">httpjson</code>，它是比原代码中提供的一个包，位于<a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/net/http/httpjson\">net/http/httpjson</a> 。它的功能主要是为了在http访问与Go的函数之间增加了一层转换。通常用户通过http与api交互的时候，发送和接收的都是JSON数据，而我们在第2步的handler中定义的是Go函数，通过<code class=\"gatsby-code-text\">httpjson</code>，可以在两者之间自动转换，使得我们在写Go代码的时候，不需要考虑JSON以及http协议相关的问题。相应的，为了与jsonhttp配合使用，第2步中的handler在格式上也会有一些要求，详情可参见这里的详细注释：<a href=\"https://github.com/freewind/bytom/blob/f80a6058be22b3888caeb8f327db1f435db43e7a/net/http/httpjson/doc.go#L3-L40\">net/http/httpjson/doc.go#L3-L40</a> 。由于httpjson所涉及的代码还比较多，这里就不详述，以后有机会专开一篇。</p>\n<p>然后我们再看第2步的<code class=\"gatsby-code-text\">a.createAccount</code>的代码：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/accounts.go#L16-L30\">api/accounts.go#L16-L30</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">createAccount</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ins <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tRootXPubs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>chainkd<span class=\"token punctuation\">.</span>XPub <span class=\"token string\">`json:\"root_xpubs\"`</span>\n\tQuorum    <span class=\"token builtin\">int</span>            <span class=\"token string\">`json:\"quorum\"`</span>\n\tAlias     <span class=\"token builtin\">string</span>         <span class=\"token string\">`json:\"alias\"`</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> Response <span class=\"token punctuation\">{</span>\n\tacc<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span>wallet<span class=\"token punctuation\">.</span>AccountMgr<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ins<span class=\"token punctuation\">.</span>RootXPubs<span class=\"token punctuation\">,</span> ins<span class=\"token punctuation\">.</span>Quorum<span class=\"token punctuation\">,</span> ins<span class=\"token punctuation\">.</span>Alias<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">NewErrorResponse</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tannotatedAccount <span class=\"token operator\">:=</span> account<span class=\"token punctuation\">.</span><span class=\"token function\">Annotated</span><span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">)</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"account ID\"</span><span class=\"token punctuation\">,</span> annotatedAccount<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Created account\"</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">NewSuccessResponse</span><span class=\"token punctuation\">(</span>annotatedAccount<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这个函数的内容我们在这里不细究，需要注意的反而是它的格式，因为前面说了，它需要跟<code class=\"gatsby-code-text\">jsonHandler</code>配合使用。格式的要求大概就是，第一个参数是<code class=\"gatsby-code-text\">Context</code>，第二个参数是可以从JSON数据转换过来的参数，返回值是一个Response以及一个Error，但是这四个又全部是可选的。</p>\n<p>让我们回到<code class=\"gatsby-code-text\">api.buildHandler()</code>，继续往下：</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\">\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">alwaysError</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not Found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/error\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>walletError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-access-token\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createAccessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-access-tokens\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listAccessTokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete-access-token\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>deleteAccessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/check-access-token\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>checkAccessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-transaction-feed\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createTxFeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-transaction-feed\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getTxFeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/update-transaction-feed\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>updateTxFeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete-transaction-feed\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>deleteTxFeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-transaction-feeds\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listTxFeeds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-unconfirmed-transaction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getUnconfirmedTx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list-unconfirmed-transactions\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>listUnconfirmedTxs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-block-hash\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getBestBlockHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-block-header\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getBlockHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-block\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-block-count\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getBlockCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-difficulty\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getDifficulty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-hash-rate\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getHashRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/is-mining\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>isMining<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/set-mining\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>setMining<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get-work\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getWork<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/submit-work\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>submitWork<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/gas-rate\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>gasRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tm<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/net-info\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>getNetInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>可以看到还是各种功能的定义，主要是跟区块数据、挖矿、访问控制等相关的功能，这里就不详述了。</p>\n<p>再继续：</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\">\thandler <span class=\"token operator\">:=</span> <span class=\"token function\">latencyHandler</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> walletEnable<span class=\"token punctuation\">)</span>\n\thandler <span class=\"token operator\">=</span> <span class=\"token function\">maxBytesHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\thandler <span class=\"token operator\">=</span> <span class=\"token function\">webAssetsHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\thandler <span class=\"token operator\">=</span> gzip<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">{</span>Handler<span class=\"token punctuation\">:</span> handler<span class=\"token punctuation\">}</span>\n\n\ta<span class=\"token punctuation\">.</span>handler <span class=\"token operator\">=</span> handler\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这里是把前面定义的功能点配置包成了一个handler，然后在它外面包了一层又一层，添加上了更多的功能：</p>\n<ol>\n<li><code class=\"gatsby-code-text\">latencyHandler</code>：我目前还不能准确说出它的作用，留待以后补充</li>\n<li><code class=\"gatsby-code-text\">maxBytesHandler</code>：防止用户提交的数据过大，目前值约为<code class=\"gatsby-code-text\">10MB</code>。对于除<code class=\"gatsby-code-text\">signer/sign-block</code>以外的url有效</li>\n<li><code class=\"gatsby-code-text\">webAssetsHandler</code>：向用户提供dashboard相关的前端页面资源（比如网页、图片等等）。可能是为了性能和方便性方面的考虑，前端文件都经过混淆后，以字符串形式嵌入在<a href=\"https://github.com/Bytom/bytom/blob/master/dashboard/dashboard.go\">dashboard/dashboard.go</a>中，真正的代码在另一个项目中 <a href=\"https://github.com/Bytom/dashboard\">https://github.com/Bytom/dashboard</a>，我们在后面会看一下</li>\n<li><code class=\"gatsby-code-text\">gzip.Handler</code>：对http客户端进行是否支持<code class=\"gatsby-code-text\">gzip</code>的检测，并且在支持的情况下，传输数据时使用gzip压缩</li>\n</ol>\n<p>然后让我们回到主线，看看前面的<code class=\"gatsby-code-text\">NewAPI</code>中最后调用的<code class=\"gatsby-code-text\">api.initServer(config)</code>：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L89-L122\">api/api.go#L89-L122</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span>config <span class=\"token operator\">*</span>cfg<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// The waitHandler accepts incoming requests, but blocks until its underlying</span>\n\t<span class=\"token comment\">// handler is set, when the second phase is complete.</span>\n\t<span class=\"token keyword\">var</span> coreHandler waitHandler\n\t<span class=\"token keyword\">var</span> handler http<span class=\"token punctuation\">.</span>Handler\n\n\tcoreHandler<span class=\"token punctuation\">.</span>wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tmux <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">NewServeMux</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tmux<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>coreHandler<span class=\"token punctuation\">)</span>\n\n\thandler <span class=\"token operator\">=</span> mux\n\t<span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>Auth<span class=\"token punctuation\">.</span>Disable <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">{</span>\n\t\thandler <span class=\"token operator\">=</span> <span class=\"token function\">AuthHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>accessTokens<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\thandler <span class=\"token operator\">=</span> <span class=\"token function\">RedirectHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\n\tsecureheader<span class=\"token punctuation\">.</span>DefaultConfig<span class=\"token punctuation\">.</span>PermitClearLoopback <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\tsecureheader<span class=\"token punctuation\">.</span>DefaultConfig<span class=\"token punctuation\">.</span>HTTPSRedirect <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\tsecureheader<span class=\"token punctuation\">.</span>DefaultConfig<span class=\"token punctuation\">.</span>Next <span class=\"token operator\">=</span> handler\n\n\ta<span class=\"token punctuation\">.</span>server <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>http<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Note: we should not set TLSConfig here;</span>\n\t\t<span class=\"token comment\">// we took care of TLS with the listener in maybeUseTLS.</span>\n\t\tHandler<span class=\"token punctuation\">:</span>      secureheader<span class=\"token punctuation\">.</span>DefaultConfig<span class=\"token punctuation\">,</span>\n\t\tReadTimeout<span class=\"token punctuation\">:</span>  httpReadTimeout<span class=\"token punctuation\">,</span>\n\t\tWriteTimeout<span class=\"token punctuation\">:</span> httpWriteTimeout<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token comment\">// Disable HTTP/2 for now until the Go implementation is more stable.</span>\n\t\t<span class=\"token comment\">// https://github.com/golang/go/issues/16450</span>\n\t\t<span class=\"token comment\">// https://github.com/golang/go/issues/17071</span>\n\t\tTLSNextProto<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>tls<span class=\"token punctuation\">.</span>Conn<span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcoreHandler<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这个方法在本文不适合细讲，因为它更多的是涉及到http层面的一些东西，不是本文的重点。值得关注的地方是，方法创建了一个Go提供的<code class=\"gatsby-code-text\">http.Server</code>，把前面我们辛苦配置好的handler塞进去，万事俱备，只欠启动。</p>\n<p>下面就是启动啦。我们终于可以回到最新的<code class=\"gatsby-code-text\">initAndstartApiServer</code>方法了，还记得它的第3块内容吗？主要就是调用了<code class=\"gatsby-code-text\">n.api.StartServer(*listenAddr)</code>：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L125-L140\">api/api.go#L125-L140</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">StartServer</span><span class=\"token punctuation\">(</span>address <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// ...</span>\n\tlistener<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// ...</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">WithField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Serve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rpc server\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这块比较简单，就是使用Go的<code class=\"gatsby-code-text\">net.Listen</code>来监听传入的web api地址，得到相应的listener之后，把它传给我们在前面创建的<code class=\"gatsby-code-text\">http.Server</code>的<code class=\"gatsby-code-text\">Serve</code>方法，就大功告成了。</p>\n<p>这一块代码分析写得十分痛苦，主要原因是它的web api这里几乎涉及到了所有比原提供的功能，很庞杂。还有不少跟http协议相关的东西。同时，因为暴露出了接口，这里就容易出现安全风险，所以代码里面还有不少涉及到用户输入、安全检查等。这些东西当然是非常重要的，但是从代码阅读的角度上来讲又难免枯燥，除非我们就是为了研究安全性。</p>\n<p>本文的任务主要是研究比原是如何提供http服务的，关于比原在安全性方面做了哪些事情，以后会有专门的分析。</p>\n<h2 id=\"dashboard使用了什么样的前端框架？\"><a href=\"#dashboard%E4%BD%BF%E7%94%A8%E4%BA%86%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dashboard使用了什么样的前端框架？</h2>\n<p>比原的前端代码是在另一个独立的项目中：<a href=\"https://github.com/Bytom/dashboard\">https://github.com/Bytom/dashboard</a></p>\n<p>本文我们并不去探讨代码细节，而仅仅去看一下它使用了哪些前端框架，有个大概印象即可。</p>\n<p>通过<a href=\"https://github.com/Bytom/dashboard/blob/master/package.json\">https://github.com/Bytom/dashboard/blob/master/package.json</a>我们就可以大概了解到，比原前端使用了：</p>\n<ol>\n<li>构建工具：直接利用<code class=\"gatsby-code-text\">npm</code>的<code class=\"gatsby-code-text\">Scripts</code></li>\n<li>前端框架：<code class=\"gatsby-code-text\">React</code> + <code class=\"gatsby-code-text\">Redux</code></li>\n<li>CSS方面：<code class=\"gatsby-code-text\">bootstrap</code></li>\n<li>JavaScript：ES6</li>\n<li>http请求：<code class=\"gatsby-code-text\">fetch-ponyfill</code></li>\n<li>资源打包：<code class=\"gatsby-code-text\">webpack</code></li>\n<li>测试：<code class=\"gatsby-code-text\">mocha</code></li>\n</ol>\n<h2 id=\"dashboard上面的数据，是以什么样的方式从后台拿到的？\"><a href=\"#dashboard%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%98%AF%E4%BB%A5%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E6%96%B9%E5%BC%8F%E4%BB%8E%E5%90%8E%E5%8F%B0%E6%8B%BF%E5%88%B0%E7%9A%84%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dashboard上面的数据，是以什么样的方式从后台拿到的？</h2>\n<p>以Account相关的代码为例：</p>\n<p><a href=\"https://github.com/Bytom/dashboard/blob/dc80277522bef40315e5a4968f2ed1059261ac36/src/sdk/api/accounts.js#L16\">src/sdk/api/accounts.js#L16</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-javascript\"><code class=\"gatsby-code-javascript\">const accountsAPI = (client) =&gt; {\n  return {\n    create: (params, cb) =&gt; shared.create(client, &#39;/create-account&#39;, params, {cb, skipArray: true}),\n\n    createBatch: (params, cb) =&gt; shared.createBatch(client, &#39;/create-account&#39;, params, {cb}),\n\n    // ...\n\n    listAddresses: (accountId) =&gt; shared.query(client, &#39;accounts&#39;, &#39;/list-addresses&#39;, {account_id: accountId}),\n  }\n}</code></pre>\n      </div>\n<p>这些函数主要是通过<code class=\"gatsby-code-text\">fetch-ponyfill</code>库中提供的方法，向向前面使用go创建的web api接口发送http请求，并且拿到相应的回复数据。而它们又将在React组件中被调用，拿回来的数据用于填充页面。</p>\n<p>同样，更细节的内容在本文就不讲啦。</p>\n<p>终于，经过这一大篇的分析，我觉得我对于比原的Dashboard是怎么做出来的，有了一些基本的印象。剩下的，就是在以后，针对其中的功能进行细致的研究。</p>\n<hr>\n<p>如果你觉得这些文章对你非常有用，控制不住想打赏作者，可以有以下选择：</p>\n<ol>\n<li>BTM: <code class=\"gatsby-code-text\">0x6bcCfb7265d4aB0C1a71F7d19b9E581cae73D777</code></li>\n<li>BTC: <code class=\"gatsby-code-text\">1Af2Q23Y1kqgtgbryzjS7RxrnEmyvYuX4b</code></li>\n<li>ETH: <code class=\"gatsby-code-text\">0x6bcCfb7265d4aB0C1a71F7d19b9E581cae73D777</code></li>\n</ol>\n<p>多少请随意，心意最重要，我们一起努力吧！</p>","frontmatter":{"title":"Dashboard开发原理","next":null,"prev":null},"fields":{"path":null,"slug":"docs/bytomanalysis-dashboard.html"}}},"pathContext":{"slug":"docs/bytomanalysis-dashboard.html"}}