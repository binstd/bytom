{"data":{"markdownRemark":{"html":"<p>在比原的dashboard中，我们可以为一个帐户创建地址(address)，这样就可以在两个地址之间转帐了。在本文，我们将结合代码先研究一下，比原是如何创建一个地址的。</p>\n<p>首先看看我们在dashboard中的是如何操作的。</p>\n<p>我们可以点击左侧的”Accounts”，在右边显示我的帐户信息。注意右上角有一个“Create Address”链接：</p>\n<p><img src=\"./images/bytom-account.png\" alt=\"bytom-account\"></p>\n<p>点击后，比原会为我当前选择的这个帐户生成一个地址，马上就可以使用了：</p>\n<p><img src=\"./images/bytom-created-address.png\" alt=\"bytom-created-address\"></p>\n<p>本文我们就要研究一下这个过程是怎么实现的，分成了两个小问题：</p>\n<ol>\n<li>前端是如何向后台接口发送请求的？</li>\n<li>比原后台是如何创建地址的？</li>\n</ol>\n<h2 id=\"前端是如何向后台接口发送请求的？\"><a href=\"#%E5%89%8D%E7%AB%AF%E6%98%AF%E5%A6%82%E4%BD%95%E5%90%91%E5%90%8E%E5%8F%B0%E6%8E%A5%E5%8F%A3%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E7%9A%84%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前端是如何向后台接口发送请求的？</h2>\n<p>在前一篇文章中，我们也是先从前端开始，在React组件中一步步找到了使用了接口，以前发送的数据。由于这些过程比较相似，在本文我们就简化了，直接给出找到的代码。</p>\n<p>首先是页面中的”Create Address”对应的React组件：</p>\n<p><a href=\"https://github.com/Bytom/dashboard/blob/0cc300fd0a9cbc52940b2d5119cf05230392a75f/src/features/accounts/components/AccountShow.jsx#L12-L132\">https://github.com/Bytom/dashboard/blob/0cc300fd0a9cbc52940b2d5119cf05230392a75f/src/features/accounts/components/AccountShow.jsx#L12-L132</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountShow</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseShow</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// 2. </span>\n  <span class=\"token function\">createAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// 3. </span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">createAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      account_alias<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>alias\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">listAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>lang <span class=\"token operator\">===</span> <span class=\"token string\">'zh'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'拷贝这个地址以用于交易中：'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'Copy this address to use in a transaction:'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CopyableBlock</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">lang</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>lang<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n      view <span class=\"token operator\">=</span> \n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PageTitle</span>\n          <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">actions</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n            <span class=\"token comment\">// 1.</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>btn btn-link<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>createAddress<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n              <span class=\"token punctuation\">{</span>lang <span class=\"token operator\">===</span> <span class=\"token string\">'zh'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'新建地址'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'Create address'</span><span class=\"token punctuation\">}</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span>\n       <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>上面的第1处就是”Create Address”链接对应的代码，它实际上是一个Button，当点击后，会调用<code class=\"gatsby-code-text\">createAddress</code>方法。而第2处就是这个<code class=\"gatsby-code-text\">createAddress</code>方法，在它里面的第3处，又将调用<code class=\"gatsby-code-text\">this.props.createAddress</code>，也就是由外部传进来的<code class=\"gatsby-code-text\">createAddress</code>函数。同时，它还要发送一个参数<code class=\"gatsby-code-text\">account_alias</code>，它对应就是当前帐户的alias。</p>\n<p>继续可以找到<code class=\"gatsby-code-text\">createAddress</code>的定义：</p>\n<p><a href=\"https://github.com/Bytom/dashboard/blob/674d3b1be8ec420d75f0ab0b792fd97e11ffe352/src/sdk/api/accounts.js#L3-L32\">https://github.com/Bytom/dashboard/blob/674d3b1be8ec420d75f0ab0b792fd97e11ffe352/src/sdk/api/accounts.js#L3-L32</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">accountsAPI</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    createAddress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> shared<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> <span class=\"token string\">'/create-account-receiver'</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>cb<span class=\"token punctuation\">,</span> skipArray<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>可以看到，它调用的比原接口是<code class=\"gatsby-code-text\">/create-account-receiver</code>。</p>\n<p>然后我们就将进入比原后台。</p>\n<h2 id=\"比原后台是如何创建地址的？\"><a href=\"#%E6%AF%94%E5%8E%9F%E5%90%8E%E5%8F%B0%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%9C%B0%E5%9D%80%E7%9A%84%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>比原后台是如何创建地址的？</h2>\n<p>在比原的代码中，我们可以找到接口<code class=\"gatsby-code-text\">/create-account-receiver</code>对应的handler:</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/api.go#L164-L174\">api/api.go#L164-L174</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">buildHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">.</span>wallet <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/create-account-receiver\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">jsonHandler</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>createAccountReceiver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>原来是<code class=\"gatsby-code-text\">a.createAccountReceiver</code>。我们继续进去：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/api/receivers.go#L9-L32\">api/receivers.go#L9-L32</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token comment\">// 1.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span>API<span class=\"token punctuation\">)</span> <span class=\"token function\">createAccountReceiver</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> ins <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    AccountID    <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"account_id\"`</span>\n    AccountAlias <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"account_alias\"`</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> Response <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 2.</span>\n    accountID <span class=\"token operator\">:=</span> ins<span class=\"token punctuation\">.</span>AccountID\n    <span class=\"token keyword\">if</span> ins<span class=\"token punctuation\">.</span>AccountAlias <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">{</span>\n        account<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span>wallet<span class=\"token punctuation\">.</span>AccountMgr<span class=\"token punctuation\">.</span><span class=\"token function\">FindByAlias</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> ins<span class=\"token punctuation\">.</span>AccountAlias<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">NewErrorResponse</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        accountID <span class=\"token operator\">=</span> account<span class=\"token punctuation\">.</span>ID\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 3.</span>\n    program<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> a<span class=\"token punctuation\">.</span>wallet<span class=\"token punctuation\">.</span>AccountMgr<span class=\"token punctuation\">.</span><span class=\"token function\">CreateAddress</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> accountID<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">NewErrorResponse</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 4. </span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">NewSuccessResponse</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>txbuilder<span class=\"token punctuation\">.</span>Receiver<span class=\"token punctuation\">{</span>\n        ControlProgram<span class=\"token punctuation\">:</span> program<span class=\"token punctuation\">.</span>ControlProgram<span class=\"token punctuation\">,</span>\n        Address<span class=\"token punctuation\">:</span>        program<span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>方法中的代码可以分成4块，看起来还是比较清楚：</p>\n<ol>\n<li>第1块的关注点主要在参数这块。可以看到，这个接口可以接收2个参数<code class=\"gatsby-code-text\">account_id</code>和<code class=\"gatsby-code-text\">account_alias</code>，但是刚才的前端代码中传过来了<code class=\"gatsby-code-text\">account_alias</code>这一个，怎么回事？</li>\n<li>从第2块这里可以看出，如果传了<code class=\"gatsby-code-text\">account_alias</code>这个参数，则会以它为准，用它去查找相应的account，再拿到相应的id。否则的话，才使用<code class=\"gatsby-code-text\">account_id</code>当作account的id</li>\n<li>第3块是为<code class=\"gatsby-code-text\">accountID</code>相应的account创建一个地址</li>\n<li>第4块返回成功信息，经由外面的<code class=\"gatsby-code-text\">jsonHandler</code>转换为JSON对象后发给前端</li>\n</ol>\n<p>这里面，需要我们关注的只有两个方法，即第2块中的<code class=\"gatsby-code-text\">a.wallet.AccountMgr.FindByAlias</code>和第3块中的<code class=\"gatsby-code-text\">a.wallet.AccountMgr.CreateAddress</code>，我们依次研究。</p>\n<h3 id=\"awalletaccountmgrfindbyalias\"><a href=\"#awalletaccountmgrfindbyalias\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"gatsby-code-text\">a.wallet.AccountMgr.FindByAlias</code></h3>\n<p>直接上代码：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L176-L195\">account/accounts.go#L176-L195</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token comment\">// FindByAlias retrieves an account's Signer record by its alias</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">FindByAlias</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> alias <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. </span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cachedID<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>aliasCache<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ok <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">FindByID</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cachedID<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 2. </span>\n    rawID <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token function\">aliasKey</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> rawID <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> ErrFindAccount\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 3.</span>\n    accountID <span class=\"token operator\">:=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>rawID<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>aliasCache<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">,</span> accountID<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">FindByID</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> accountID<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>该方法的结构同样比较简单，分成了3块：</p>\n<ol>\n<li>直接用alias在内存缓存<code class=\"gatsby-code-text\">aliasCache</code>里找相应的id，找到的话调用<code class=\"gatsby-code-text\">FindByID</code>找出完整的account数据</li>\n<li>如果cache中没找到，则将该alias变成数据库需要的形式，在数据库里找id。如果找不到，报错</li>\n<li>找到的话，把alias和id放在内存cache中，以备后用，同时调用<code class=\"gatsby-code-text\">FindByID</code>找出完整的account数据</li>\n</ol>\n<p>上面提到的<code class=\"gatsby-code-text\">aliasCache</code>是定义于<code class=\"gatsby-code-text\">Manager</code>类型中的一个字段：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L78-L85\">account/accounts.go#L78-L85</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">type</span> Manager <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    aliasCache <span class=\"token operator\">*</span>lru<span class=\"token punctuation\">.</span>Cache</code></pre>\n      </div>\n<p><code class=\"gatsby-code-text\">lru.Cache</code>是由Go语言提供的，我们就不深究了。</p>\n<p>然后就是用到多次的<code class=\"gatsby-code-text\">FindByID</code>：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L197-L220\">account/accounts.go#L197-L220</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token comment\">// FindByID returns an account's Signer record by its ID.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">FindByID</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. </span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cachedAccount<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ok <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> cachedAccount<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 2.</span>\n    rawAccount <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token function\">Key</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> rawAccount <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> ErrFindAccount\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 3.</span>\n    account <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Account<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>rawAccount<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 4.</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span>cacheMu<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> account<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这个方法跟前面的套路一样，也比较清楚：</p>\n<ol>\n<li>先在内存缓存<code class=\"gatsby-code-text\">cache</code>中找，找到就直接返回。<code class=\"gatsby-code-text\">m.cache</code>也是定义于<code class=\"gatsby-code-text\">Manager</code>中的一个<code class=\"gatsby-code-text\">lru.Cache</code>对象</li>\n<li>内存缓存中没有，就到数据库里找，根据id找到相应的JSON格式的account对象数据</li>\n<li>把JSON格式的数据变成<code class=\"gatsby-code-text\">Account</code>类型的数据，也就是前面需要的</li>\n<li>把它放到内存缓存<code class=\"gatsby-code-text\">cache</code>中，以<code class=\"gatsby-code-text\">id</code>为key</li>\n</ol>\n<p>这里感觉没什么说的，因为基本上在前一篇都涉及到了。</p>\n<h3 id=\"awalletaccountmgrcreateaddress\"><a href=\"#awalletaccountmgrcreateaddress\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"gatsby-code-text\">a.wallet.AccountMgr.CreateAddress</code></h3>\n<p>继续看生成地址的方法：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L239-L246\">account/accounts.go#L239-L246</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token comment\">// CreateAddress generate an address for the select account</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">CreateAddress</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> accountID <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> change <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>cp <span class=\"token operator\">*</span>CtrlProgram<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    account<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">FindByID</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> accountID<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">createAddress</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>由于这个方法里传过来的是<code class=\"gatsby-code-text\">accountID</code>而不是<code class=\"gatsby-code-text\">account</code>对象，所以还需要再用<code class=\"gatsby-code-text\">FindByID</code>查一遍，然后，再调用<code class=\"gatsby-code-text\">createAddress</code>这个私有方法创建地址：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L248-L263\">account/accounts.go#L248-L263</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token comment\">// 1.</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">createAddress</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> account <span class=\"token operator\">*</span>Account<span class=\"token punctuation\">,</span> change <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>cp <span class=\"token operator\">*</span>CtrlProgram<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 2. </span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">.</span>XPubs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n        cp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">createP2PKH</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        cp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">createP2SH</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 3.</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">insertAccountControlProgram</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> cp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> cp<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>该方法可以分成3部分：</p>\n<ol>\n<li>在第1块中主要关注的是返回值。方法名为<code class=\"gatsby-code-text\">CreateAddress</code>，但是返回值或者<code class=\"gatsby-code-text\">CtrlProgram</code>，那么<code class=\"gatsby-code-text\">Address</code>在哪儿？实际上<code class=\"gatsby-code-text\">Address</code>是<code class=\"gatsby-code-text\">CtrlProgram</code>中的一个字段，所以调用者可以拿到Address</li>\n<li>在第2块代码这里有一个新的发现，原来一个帐户是可以有多个密钥对的（提醒：在椭圆算法中一个私钥只能有一个公钥）。因为这里将根据该account所拥有的公钥数量不同，调用不同的方法。如果公钥数量为1，说明该帐户是一个独享帐户（由一个密钥管理），将调用<code class=\"gatsby-code-text\">m.createP2PKH</code>；否则的话，说明这个帐户由多个公钥共同管理（可能是一个联合帐户），需要调用<code class=\"gatsby-code-text\">m.createP2SH</code>。这两个方法，返回的对象<code class=\"gatsby-code-text\">cp</code>，指的是<code class=\"gatsby-code-text\">ControlProgram</code>，强调了它是一种控制程序，而不是一个地址，地址<code class=\"gatsby-code-text\">Address</code>只是它的一个字段</li>\n<li>创建好以后，把该控制程序插入到该帐户中</li>\n</ol>\n<p>我们先看第2块代码中的帐户只有一个密钥的情况，所调用的方法为<code class=\"gatsby-code-text\">createP2PKH</code>：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L265-L290\">account/accounts.go#L265-L290</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">createP2PKH</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> account <span class=\"token operator\">*</span>Account<span class=\"token punctuation\">,</span> change <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>CtrlProgram<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    idx <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">getNextContractIndex</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">)</span>\n    path <span class=\"token operator\">:=</span> signers<span class=\"token punctuation\">.</span><span class=\"token function\">Path</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">.</span>Signer<span class=\"token punctuation\">,</span> signers<span class=\"token punctuation\">.</span>AccountKeySpace<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span>\n    derivedXPubs <span class=\"token operator\">:=</span> chainkd<span class=\"token punctuation\">.</span><span class=\"token function\">DeriveXPubs</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">.</span>XPubs<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n    derivedPK <span class=\"token operator\">:=</span> derivedXPubs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">PublicKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pubHash <span class=\"token operator\">:=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">Ripemd160</span><span class=\"token punctuation\">(</span>derivedPK<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// TODO: pass different params due to config</span>\n    address<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> common<span class=\"token punctuation\">.</span><span class=\"token function\">NewAddressWitnessPubKeyHash</span><span class=\"token punctuation\">(</span>pubHash<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>consensus<span class=\"token punctuation\">.</span>ActiveNetParams<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n\n    control<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> vmutil<span class=\"token punctuation\">.</span><span class=\"token function\">P2WPKHProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>pubHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>CtrlProgram<span class=\"token punctuation\">{</span>\n        AccountID<span class=\"token punctuation\">:</span>      account<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span>\n        Address<span class=\"token punctuation\">:</span>        address<span class=\"token punctuation\">.</span><span class=\"token function\">EncodeAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        KeyIndex<span class=\"token punctuation\">:</span>       idx<span class=\"token punctuation\">,</span>\n        ControlProgram<span class=\"token punctuation\">:</span> control<span class=\"token punctuation\">,</span>\n        Change<span class=\"token punctuation\">:</span>         change<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>不好意思，这个方法的代码一看我就搞不定了，看起来是触及到了比较比原链中比较核心的地方。我们很难通过这几行代码以及快速的查阅来对它进行合理的解释，所以本篇只能跳过，以后再专门研究。同样，<code class=\"gatsby-code-text\">m.createP2SH</code>也是一样的，我们也先跳过。我们早晚要把这一块解决的，请等待。</p>\n<p>我们继续看第3块中<code class=\"gatsby-code-text\">m.insertAccountControlProgram</code>方法：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L332-L344\">account/accounts.go#L332-L344</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Manager<span class=\"token punctuation\">)</span> <span class=\"token function\">insertAccountControlProgram</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> progs <span class=\"token operator\">...</span><span class=\"token operator\">*</span>CtrlProgram<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> hash common<span class=\"token punctuation\">.</span>Hash\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> prog <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> progs <span class=\"token punctuation\">{</span>\n        accountCP<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>prog<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> err\n        <span class=\"token punctuation\">}</span>\n\n        sha3pool<span class=\"token punctuation\">.</span><span class=\"token function\">Sum256</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prog<span class=\"token punctuation\">.</span>ControlProgram<span class=\"token punctuation\">)</span>\n        m<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token function\">ContractKey</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> accountCP<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这个方法看起来就容易多了，主要是把前面创建好的<code class=\"gatsby-code-text\">CtrlProgram</code>传过来，对它进行保存数据库的操作。注意这个方法的第2个参数是<code class=\"gatsby-code-text\">...*CtrlProgram</code>，它是一个可变参数，不过在本文中用到的时候，只传了一个值（在其它使用的地方有传入多个的）。</p>\n<p>在方法中，对<code class=\"gatsby-code-text\">progs</code>进行变量，对其中的每一个，都先把它转换成JSON格式，然后再对它进行摘要，最后通过<code class=\"gatsby-code-text\">ContractKey</code>函数给摘要加一个<code class=\"gatsby-code-text\">Contract:</code>的前缀，放在数据库中。这里的<code class=\"gatsby-code-text\">m.db</code>在之前文章中分析过，它就是那个名为<code class=\"gatsby-code-text\">wallet</code>的leveldb数据库。这个数据库的Key挺杂的，保存了各种类型的数据，以前缀区分。</p>\n<p>我们看一下<code class=\"gatsby-code-text\">ContractKey</code>函数，很简单：</p>\n<p><a href=\"https://github.com/freewind/bytom-v1.0.1/blob/master/account/accounts.go#L57-L59\">account/accounts.go#L57-L59</a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-go\"><code class=\"gatsby-code-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">ContractKey</span><span class=\"token punctuation\">(</span>hash common<span class=\"token punctuation\">.</span>Hash<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>contractPrefix<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>其中的<code class=\"gatsby-code-text\">contractPrefix</code>为常量<code class=\"gatsby-code-text\">[]byte(&quot;Contract:&quot;)</code>。从这个名字我们可以又将接触到一个新的概念：合约(Contract)，看来前面的<code class=\"gatsby-code-text\">CtrlProgram</code>就是一个合约，而帐户只是合约中的一部分（是否如此，留待我们以后验证）</p>\n<p>写到这里，我觉得这次要解决的问题“比原是如何通过<code class=\"gatsby-code-text\">/create-account-receiver</code>创建地址的”已经解决的差不多了。</p>\n<p>虽然很遗憾在过程中遇到的与核心相关的问题，比如创建地址的细节，我们目前还没法理解，但是我们又再一次触及到了核心。在之前的文章中我说过，比原的核心部分是很复杂的，所以我将尝试多种从外围向中心的试探方式，每次只触及核心但不深入，直到积累了足够的知识再深入研究核心。毕竟对于一个刚接触区块链的新人来说，以自己独立的方式来解读比原源代码，还是一件很有挑战的事情。比原的开发人员已经很辛苦了，我还是尽量少麻烦他们。</p>\n<hr>\n<p>如果你觉得这些文章对你非常有用，控制不住想打赏作者，可以有以下选择：</p>\n<ol>\n<li>BTM: <code class=\"gatsby-code-text\">0x6bcCfb7265d4aB0C1a71F7d19b9E581cae73D777</code></li>\n<li>BTC: <code class=\"gatsby-code-text\">1Af2Q23Y1kqgtgbryzjS7RxrnEmyvYuX4b</code></li>\n<li>ETH: <code class=\"gatsby-code-text\">0x6bcCfb7265d4aB0C1a71F7d19b9E581cae73D777</code></li>\n</ol>\n<p>多少请随意，心意最重要，我们一起努力吧！</p>","frontmatter":{"title":"通过`/create-account-receiver`创建地址","next":null,"prev":null},"fields":{"path":null,"slug":"docs/bytomanalysis-create-account-receiver.html"}}},"pathContext":{"slug":"docs/bytomanalysis-create-account-receiver.html"}}